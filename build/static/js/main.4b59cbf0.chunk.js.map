{"version":3,"sources":["assets/imgs/kk.jpg","Components/Character.js","Components/Characters.js","Components/AddItem.js","App.js","api/api-service.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Character","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","item","bgStyle","backgroundImage","concat","image","backgroundRepeat","backgroundSize","height","lastSeen","Date","formatted_date","getDate","getMonth","getFullYear","react_default","a","createElement","Fragment","className","style","name","price","toFixed","Component","Characters","itemList","AddItem","state","rarity","success","obtained","error","addItems","e","preventDefault","axios","get","headers","Authorization","then","result","data","filter","type","delay","forEach","lastUpdate","setUTCSeconds","obtained_type","includes","replace","trim","setTimeout","x-api-key","response","length","console","log","images","png","charAt","toUpperCase","slice","toLowerCase","post","catch","handleSubmit","setState","Error","err","onClick","PropsRoute","_ref","component","rest","objectWithoutProperties","react_router","assign","render","routeProps","_len","arguments","Array","_key","finalProps","apply","React","renderMergedProps","App","resetHandler","items","map","id","_id","put","push","buttonHandler","callback","_this2","config","useDatabase","backgroundColor","index","key","Components_Character","styleting","react_router_dom","App_PropsRoute","path","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4b59cbf0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kk.3c8db120.jpg\";","import React, { Component } from 'react';\r\nimport \"../assets/default.css\"\r\nimport kkk from \"../assets/imgs/kk.jpg\"\r\n\r\nclass Character extends Component {\r\n    constructor(props) {\r\n        super(props); \r\n        this.item = this.props.item; \r\n    }\r\n\r\n    render() {\r\n\r\n        const bgStyle = {\r\n            backgroundImage: `url(${this.item.image})`,\r\n            backgroundRepeat: \"no-repeat\",\r\n            backgroundSize: \"auto 100%\",\r\n            height: \"83%\"\r\n        }\r\n        \r\n        const months = [\"JAN\", \"FEB\", \"MAR\",\"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"];\r\n        const lastSeen = new Date(this.item.lastSeen); \r\n        const formatted_date = lastSeen.getDate() + \".\" + months[lastSeen.getMonth()] + \".\" + lastSeen.getFullYear(); \r\n\r\n        return (\r\n            <React.Fragment>\r\n\r\n\r\n            <div className='col-md-3 item'>\r\n                \r\n                <div style={bgStyle} className='bgimage'></div>\r\n\r\n                <div className=\"info-box\" >\r\n                    <p className=\"name\">{this.item.name}</p>\r\n                    <p className=\"price\">V-bucks: {this.item.price.toFixed(0)}</p>\r\n                    <p className=\"last-seen\">Last seen: {formatted_date}</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"col-md-1 col-md-offset-1\"></div>\r\n\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Character;","import React from 'react';\r\n\r\n\r\nconst Characters = (props) => {\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            {props.itemList}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Characters;","import React, { Component } from 'react';\r\nimport axios from 'axios'; \r\n\r\nclass AddItem extends Component {\r\n\r\n    state = {\r\n        name: \"\", \r\n        rarity: ['Uncommon'], \r\n        lastSeen: \"\", \r\n        price: \"-1\",\r\n        success: \"\", \r\n        obtained: [\"shop\"],\r\n        error: \"\"\r\n    }\r\n\r\n    addItems = (e) => {\r\n        e.preventDefault(); \r\n\r\n        axios.get(\"https://fortnite-api.theapinetwork.com/items/list\", {\r\n            headers: {\r\n                \"Authorization\": \"...\"\r\n            }\r\n        })\r\n        .then((result) => {\r\n            const data = result.data.data.filter((item) => {\r\n                return item.item.type === \"outfit\"; \r\n            }); \r\n\r\n            let delay = 0; \r\n\r\n            data.forEach((item) => {\r\n                let lastUpdate = item.lastUpdate; \r\n                var lastSeen = new Date(0); // The 0 there is the key, which sets the date to the epoch\r\n                lastSeen.setUTCSeconds(lastUpdate);\r\n\r\n                let name = item.item.name; \r\n                const obtained_type = item.item.obtained_type; \r\n\r\n                if(name.includes(\"Outfit\")) {\r\n                    name = name.replace(\"Outfit\", \"\").trim(); \r\n                }\r\n\r\n                if(name.includes(\"outfit\")) {\r\n                    name = name.replace(\"outfit\", \"\").trim(); \r\n                }\r\n\r\n                delay = delay + 600; \r\n\r\n                setTimeout(() => {\r\n                    axios.get(\"https://fnbr.co/api/images?type=outfit&search=\"+name, {\r\n                    headers: {\r\n                    \"x-api-key\": \"...\"\r\n                    }\r\n                })\r\n            \r\n                .then((response) => {\r\n                    const result = response.data.data; \r\n                    if(result.length === 0) {\r\n                        console.log(\"No image for \", name); \r\n                    } else {\r\n\r\n                        let image = result[0].images.png;\r\n                        let rarity = result[0].rarity.charAt(0).toUpperCase() + result[0].rarity.slice(1); \r\n                        let price = obtained_type === \"vbucks\" ? result[0].price.replace(\",\",\"\") : \"-1\";\r\n                        let obtained = obtained_type === \"vbucks\" ? \"Shop\" : result[0].price; \r\n\r\n                        if (result[0].price.toLowerCase().includes(\"tier\")) {\r\n                            console.log(\"Yes\"); \r\n                            if(obtained === \"vbucks\") {\r\n                                obtained = result[0].price; \r\n                                price = \"-1\"; \r\n                            }\r\n                        }\r\n\r\n                        axios.post(\"http://localhost:3001/api/items\", {\r\n                            \r\n                                name: name, \r\n                                price: price, \r\n                                rarity: rarity, \r\n                                lastSeen: lastSeen,\r\n                                image: image, \r\n                                obtained: obtained\r\n                            \r\n                        }).then((result) => {\r\n                            console.log(\"Success: \", result); \r\n                        }).catch((e) => {\r\n                            console.log(\"Something went wrong for \" + name + \":\", e); \r\n                        });\r\n                    }\r\n                });\r\n\r\n                }, delay)\r\n            })\r\n\r\n        });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault(); \r\n        \r\n        axios.get(\"https://fnbr.co/api/images?type=outfit&search=\"+this.state.name, {\r\n            headers: {\r\n            \"x-api-key\": \"...\"\r\n            }\r\n        }).then((response) => {\r\n            let result = response.data.data;\r\n            \r\n            if(result.length === 0) {\r\n                this.setState({\r\n                    error: \"Could not fetch data for \" + this.state.name\r\n                }); \r\n\r\n                throw new Error(`Something went wrong..${this.state.error}`); \r\n            }\r\n            else {\r\n                const rarity = result[0].rarity.charAt(0).toUpperCase() + result[0].rarity.slice(1); \r\n                const price = result[0].price.replace(\",\",\"\"); \r\n                \r\n                this.setState({\r\n                    rarity: rarity, \r\n                    price: price\r\n                }); \r\n\r\n                axios.post(\"http://localhost:3001/api/items\", {\r\n                    name: this.state.name, \r\n                    rarity: this.state.rarity, \r\n                    lastSeen: this.state.lastSeen, \r\n                    price: this.state.price,\r\n                    obtained: this.state.obtained[0]\r\n                }).then((result) => {\r\n                    this.setState({\r\n                        success: \"Success! \" + result.data.name + \" added!\",\r\n                        error: \"\"\r\n                    })\r\n                }).catch((error) => {\r\n                    this.setState({\r\n                        success: \"\",\r\n                        error: error.response.data.error\r\n                    })\r\n                });\r\n\r\n            }\r\n            \r\n        }).catch((err) => {\r\n\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <button onClick={this.addItems}>Add all items</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddItem;","import React, {Component} from 'react';\r\nimport Character from './Components/Character'; \r\nimport Characters from './Components/Characters'; \r\nimport AddItem from './Components/AddItem'; \r\nimport {fetchAllItems} from \"./api/api-service\";\r\nimport {BrowserRouter, Route} from 'react-router-dom'; \r\nimport axios from 'axios';\r\n\r\nconst renderMergedProps = (component, ...rest) => {\r\n  const finalProps = Object.assign({}, ...rest);\r\n  return (\r\n    React.createElement(component, finalProps)\r\n  );\r\n}\r\n\r\nconst PropsRoute = ({ component, ...rest }) => {\r\n  return (\r\n    <Route {...rest} render={routeProps => {\r\n      return renderMergedProps(component, routeProps, rest);\r\n    }}/>\r\n  );\r\n}\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props); \r\n    this.state = {\r\n      items: []\r\n    }\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    fetchAllItems((result) => {\r\n      this.setState({\r\n        items: result\r\n      })\r\n    })\r\n  }\r\n\r\n  resetHandler = (e) => {\r\n    let items = []; \r\n    this.state.items.map((item) => {\r\n      const id = item._id; \r\n\r\n      axios.put(\"http://localhost:3001/api/items/\" + id, {\r\n               \"image\": \"https://image.fnbr.co/outfit/5ab17f395f957f27504aa54c/png.png\"\r\n             }).then((result) => {\r\n               items.push(result.data); \r\n             }).catch((err) => {\r\n               console.log(\"Something went wrong when saving image: \", err); \r\n             })\r\n    })\r\n\r\n    this.setState({\r\n      items\r\n    })\r\n  }\r\n  \r\n  buttonHandler = (e) => {\r\n\r\n    let delay = 0; \r\n    this.state.items.map((item) => {\r\n      delay = delay + 200; \r\n      setTimeout(() => {\r\n        const id = item._id; \r\n        const name = item.name; \r\n        axios.get(\"https://fnbr.co/api/images?search=\"+name, {\r\n          headers: {\r\n            \"x-api-key\": \"xxx\"\r\n          }\r\n        }).then((result) => {\r\n           if(result.data.data.length > 0) {\r\n             console.log(\"Success: \" + result.data.data[0].images.png); \r\n             const png = result.data.data[0].images.png; \r\n\r\n             axios.put(\"http://localhost:3001/api/items/\" + id, {\r\n               \"image\": png\r\n             }).then((result) => {\r\n               console.log(result.data); \r\n             }).catch((err) => {\r\n               console.log(\"Something went wrong when saving image: \", err); \r\n             })\r\n           } else {\r\n             console.log(\"Could not find outfit\");\r\n           }\r\n        }).catch((err) => {\r\n          console.log(\"Error: \", err); \r\n        })\r\n      },delay*2+1000)\r\n    })\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n\r\n    console.log(this.state.items);\r\n    const style={\r\n      backgroundColor: \"#ff0000\"\r\n    }\r\n\r\n    const items = this.state.items; \r\n\r\n\r\n\r\n    let itemList = items.length ? (\r\n\r\n\r\n      <div className=\"row\">\r\n\r\n        {items.map((item, index) => {\r\n          return (\r\n            <React.Fragment key={item.id}>\r\n                <Character styleting={style} item={item} />\r\n            </React.Fragment>\r\n          )\r\n        })}\r\n\r\n      </div>\r\n    ) : <p>Ingen data..</p>\r\n\r\n  return (\r\n\r\n    <div>\r\n      <BrowserRouter>\r\n        <PropsRoute path=\"/home\" component={Characters} itemList={itemList} />\r\n        <PropsRoute path=\"/add-item\" component={AddItem} />\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n  }\r\n}\r\n\r\nexport default App;","import axios from \"axios\"; \r\nimport config from '../config.json'; \r\nimport items from './dummy.json'; \r\n\r\nexport const fetchAllItems = callback => {\r\n    \r\n    if(config.useDatabase) {\r\n        axios.get(\"http://localhost:3001/api/items\").then((result) => {\r\n            callback(result.data); \r\n        }).catch((err) => {\r\n            console.log(err); \r\n        });\r\n    } \r\n    else {\r\n        callback(items); \r\n    }\r\n} ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}